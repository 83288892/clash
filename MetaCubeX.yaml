### 自用虚空终端规则 ###
### https://raw.githubusercontent.com/83288892/clash/main/MetaCubeX.yaml
######### 锚点 start #######
# 策略组相关
#pr: &pr {type: select, proxies: [♻️ 代理模式,🚀 手动选择,✅ 故障转移,🔀 自动选择,➡️ 直连模式,🔂 一致均衡,🔁 循环均衡,💯 精品节点]}

#pr: &pr {type: select, proxies: [♻️ 代理模式,🚀 手动选择,⛓️ 链式代理,✅ 故障转移,🔀 自动选择,➡️ 直连模式,🔂 一致均衡,🔁 循环均衡,💯 精品节点,🆓 公益节点,🟥 香港节点,🟥 台湾节点,🦁 狮城节点,🗾 日本节点,🥒 韩国节点,🗽 美国节点]}

pr: &pr {type: select, proxies: [♻️ 代理模式,➡️ 直连模式]}

dr: &dr {type: select, proxies: [➡️ 直连模式,♻️ 代理模式]}
#这里是订阅更新和延迟测试相关的
p: &p {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 600, lazy: true, timeout: 3000, tolerance: 100}}

# , lazy: true, timeout: 3000, tolerance: 1000

######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  Clash-XXX:
    <<: *p
    url: "https://*.com"




                                                  


mode: rule # 默认规则 [rule 默认规则匹配 global 全局代理 (需要在 GLOBAL 策略组选择代理/策略) direct 全局直连]
ipv6: true
allow-lan: true
mixed-port: 7890
unified-delay: true    #更换延迟计算方式，去除握手等额外延迟
tcp-concurrent: true    #TCP 并发
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

geodata-mode: true
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

find-process-mode: strict    # 进程匹配模式  always 开启，强制匹配所有进程 strict 默认，由 Clash 判断是否开启 off 不匹配进程，推荐在路由器上使用此模式
global-client-fingerprint: chrome    # 全局客户端指纹

# 缓存
profile:
  store-selected: true   # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: true      # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

# 域名嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: :1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query
  proxy-server-nameserver:
    - https://doh.pub/dns-query
  nameserver-policy:
    "geosite:cn,private":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query#dns"
      - "https://dns.google/dns-query#dns"
proxies:
- name: "➡️ 直连模式"
  type: direct
  udp: true

#- name: "❌ 断开连接"
#  type: reject
#  udp: true

#- name: "🌐 全局模式"
#  type: global
#  udp: true

#- name: "🌐 域名解析"
#  type: dns

                                                  
proxy-groups:

#策略 # ,

  - {name: ♻️ 代理模式, type: select , proxies: [🚀 手动选择, ⛓️ 链式代理,✅ 故障转移, 🔀 自动选择, ➡️ 直连模式, 🔂 一致均衡, 🔁 循环均衡, 💯 精品节点, 🆓 公益节点, 🌏 亚洲地区]}
  - {name: 🚀 手动选择, type: select , include-all-providers: true} 
  - {name: ⛓️ 链式代理, type: relay , proxies: [🌏 亚洲地区, 💯 精品节点]}   #入口自动选择： 🌏 亚洲地区  落地选择： 💯 精品节点  
  - {name: 💯 精品节点, type: select , include-all-providers: true, filter: "(?i)优|精|反|品|ip|歇|免流"}



  
#分流策略

  - {name: dns, type: select, proxies: [♻️ 代理模式, 🚀 手动选择]}
#  - {name: 🆎 广告拦截, type: select, proxies: [❌ 断开连接, ♻️ 代理模式,  ➡️ 直连模式]}
  - {name: 🟥 中国连接, type: select, proxies: [➡️ 直连模式, ♻️ 代理模式]}
  - {name: Ⓜ️ 远程仓库, <<: *pr }  
  - {name: Ⓜ️ 微软云盘, <<: *dr }
  - {name: Ⓜ️ 微软服务, <<: *dr }     
  - {name: 🎮 游戏平台, <<: *pr }
  - {name: 🤖 人工智能, <<: *pr }  
  - {name: 🔍 谷歌服务, <<: *pr }  
#  - {name: 🎬 油管视频, <<: *pr }  
  - {name: 🎞️ 奈飞影视, <<: *pr }    
  - {name: 🍎 苹果服务, <<: *dr }      
  - {name: 🪜 其它连接, <<: *pr}
#  - {name: ➡️ 直连模式, type: select, proxies: [DIRECT]}
#  - {name: ❌ 断开连接, type: select, proxies: [REJECT]}

#  自动切换节点模式

#  - {name: ✅ 故障转移, type: fallback, include-all-providers: true} 
  - {name: ✅ 故障转移, type: fallback, include-all-providers: true}     
  - {name: 🔀 自动选择, type: url-test, include-all-providers: true}
  - {name: 🔂 一致均衡, type: load-balance, include-all-providers: true, strategy: consistent-hashing}    
  - {name: 🔁 循环均衡, type: load-balance, include-all-providers: true, strategy: round-robin}
#地区  
  - {name: 🆓 公益节点, type: url-test , include-all-providers: true, filter: "(?i)公益|free"}
  - {name: 🌏 亚洲地区, type: url-test , include-all-providers: true, filter: "(?i)港|hk|hongkong|hong kong|台|tw|taiwan|(新|sg|singapore)|日|jp|japan|韩|kr|korea|south korea|republic of korea|印|in|越|vn|泰|th"}
#  - {name: 🟥 香港节点, type: url-test , include-all-providers: true, filter: "(?i)港|hk|hongkong|hong kong"}
#  - {name: 🟥 台湾节点, type: url-test , include-all-providers: true, filter: "(?i)台|tw|taiwan"}
#  - {name: 🦁 狮城节点, type: url-test , include-all-providers: true, filter: "(?i)(新|sg|singapore)"}
#  - {name: 🗾 日本节点, type: url-test , include-all-providers: true, filter: "(?i)日|jp|japan"}
#  - {name: 🥒 韩国节点, type: url-test , include-all-providers: true, filter: "(?i)韩|kr|korea|south korea|republic of korea"}
#  - {name: 🗽 美国节点, type: url-test , include-all-providers: true, filter: "(?i)美|us|unitedstates|united states"}


# 分流规则
rules:
# 广告拦截
#  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOSITE,cn))),🆎 广告拦截 # quic
#  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOIP,CN))),🆎 广告拦截 # quic
#  - AND,((RULE-SET,anti-AD),(NOT,((RULE-SET,anti-AD-white)))),🆎 广告拦截
#  - RULE-SET,Advertising_Classical,🆎 广告拦截
#  - DOMAIN,tms.dingtalk.com,♻️ 代理模式 #叮叮免流
#  - DOMAIN,alidocs.dingtalk.com,♻️ 代理模式 #叮叮免流

  - GEOIP,lan,➡️ 直连模式,no-resolve
  - RULE-SET,CustomProxy_domain,♻️ 代理模式
  - RULE-SET,CustomDirect_domain,➡️ 直连模式   
  - GEOSITE,CN,🟥 中国连接
  - GEOSITE,steam@cn,🟥 中国连接
  - GEOSITE,steam,🎮 游戏平台
#  - RULE-SET,Game,🎮 游戏平台   
  - GEOSITE,github,Ⓜ️ 远程仓库    
  - GEOSITE,onedrive,Ⓜ️ 微软云盘
  - GEOSITE,microsoft,Ⓜ️ 微软服务  
  - GEOSITE,ehentai,♻️ 代理模式 
  - GEOSITE,telegram,♻️ 代理模式
  
  - GEOSITE,openai,🤖 人工智能
  - GEOSITE,anthropic,🤖 人工智能   
  - GEOSITE,google,🔍 谷歌服务
  - GEOSITE,google-cn,🔍 谷歌服务
#  - GEOSITE,youtube,🎬 油管视频
  - GEOSITE,netflix,🎞️ 奈飞影视
  - GEOSITE,apple,🍎 苹果服务  
  
  - RULE-SET,AntiAd_domain,🟥 中国连接 #白名单
  - RULE-SET,anti-AD_domain,REJECT #广告
  - GEOSITE,category-ads-all,REJECT  #广告  

  - GEOSITE,geolocation-!cn,🪜 其它连接

  - GEOIP,telegram,♻️ 代理模式
  - GEOIP,google,🔍 谷歌服务
  - GEOIP,netflix,🎞️ 奈飞影视
  - GEOIP,CN,🟥 中国连接
  - MATCH,🪜 其它连接


#  - RULE-SET,xx_ip,xx
rule-anchor:
#  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: yaml}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: yaml}

rule-providers:
# 自定义常用域名规则
  CustomProxy_domain:
    <<: *domain
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/83288892/clash/main/rule/proxy.yaml"

  CustomDirect_domain:
    <<: *domain
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/83288892/clash/main/rule/direct.yaml"
# 广告拦截
  # anti-AD 广告拦截规则
  # https://github.com/privacy-protection-tools/anti-AD
  # 如果误杀率高请自行更换
  # RULE-SET,anti-AD_domain,REJECT  #拦截
  # RULE-SET,AntiAd_domain,DIRECT #直连
  anti-AD_domain:
    <<: *domain
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml"
    
# 白名单
  AntiAd_domain:
    <<: *domain
    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/privacy-protection-tools/dead-horse/master/anti-ad-white-for-clash.yaml"  
    
#  cn_ip:
#    <<: *ip
#    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"

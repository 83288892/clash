### 自用虚空终端规则 ###
### https://raw.githubusercontent.com/83288892/clash/main/MetaCubeX.yaml
######### 锚点 start #######
# 策略组相关
#pr: &pr {type: select, proxies: [♻️ 代理模式,🚀 手动选择,✅ 故障转移,🔀 自动选择,➡️ 直连模式,🔂 一致散列,🔁 循环均衡,💯 精品节点]}

#pr: &pr {type: select, proxies: [♻️ 代理模式,🚀 手动选择,🌀 链式代理,✅ 故障转移,🔀 自动选择,➡️ 直连模式,🔂 一致散列,🔁 循环均衡,💯 精品节点,🆓 公益节点,🟥 香港节点,🟥 台湾节点,🦁 狮城节点,🗾 日本节点,🥒 韩国节点,🗽 美国节点]}
# 🌏 亚洲地区,🗽 美国地区
#prox
pr: &pr {type: select, proxies: [♻️ 代理模式,➡️ 直连模式,🚀 手动选择,🔀 自动选择,🌀 链式代理,❌ 阻断连接]}
#direct
dr: &dr {type: select, proxies: [➡️ 直连模式,♻️ 代理模式,🚀 手动选择,🔀 自动选择,🌀 链式代理,❌ 阻断连接]}
#load-balance
lr: &lr {type: select, proxies: [🔁 循环均衡,🔂 一致散列]}
# area
ar: &ar {type: select, proxies: [💯 精品节点,🟥 港澳节点,🟥 台湾节点,🦁 新家节点,🗾 日本节点,🥒 韩国节点,🌏 亚洲地区,🗽 美国地区,❓ 全部地区]}
#这里是订阅更新和延迟测试相关的
#p: &p {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 600, lazy: true, timeout: 5000, tolerance: 300,  unified-delay: false}} 
# , lazy: true, timeout: 3000, tolerance: 1000
# apple测速  http://www.apple.com/library/test/success.html
# 高通测速  http://www.qualcomm.cn/generate_204
p: &p {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 3600, lazy: true, timeout: 2000, tolerance: 300, unified-delay: false}}
d: &d {type: http, interval: 86400, health-check: {enable: false, url: https://www.gstatic.com/generate_204, interval: 86400, lazy: true, timeout: 2000, tolerance: 50 ,unified-delay: false}}
l: &l {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 3600, lazy: true, timeout: 2000, tolerance: 100, unified-delay: false}}
a: &a {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 3600, lazy: true, timeout: 2000, tolerance: 100, unified-delay: false}}
######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  Clash-XXX:
    <<: *p
    url: "https://xxx"

#  Clash-Test:
#    <<: *p
#    url: "https://*.*"


                                                  


mode: rule # 默认规则 [rule 默认规则匹配 global 全局代理 (需要在 GLOBAL 策略组选择代理/策略) direct 全局直连]
ipv6: true
allow-lan: true
mixed-port: 7890
unified-delay: true    #更换延迟计算方式，去除握手等额外延迟
# 省电优化
tcp-concurrent: false    #TCP 并发  true,false
disable-keep-alive: true #安卓设备设置true 
keep-alive-interval: 15   # 控制 Clash 发出 TCP Keep Alive 包的间隔，减少移动设备耗电问题的临时措施。
keep-alive-idle: 15 # TCP Keep Alive 的最大空闲时间
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

geodata-mode: true
geox-url:
  geoip: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://ghp.ci/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"
  asn: "https://ghp.ci/https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"


find-process-mode: strict    # 进程匹配模式  always 开启，强制匹配所有进程 strict 默认，由 Clash 判断是否开启 off 不匹配进程，推荐在路由器上使用此模式
global-client-fingerprint: chrome    # 全局客户端指纹

# 缓存
profile:
  store-selected: true   # 储存 API 对策略组的选择，以供下次启动时使用
  store-fake-ip: false      # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

# 域名嗅探
sniffer:
  enable: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"

tun:
  enable: false
  stack: mixed
  dns-hijack:
    - "any:53"
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  prefer-h3: true
  use-hosts: true
  use-system-hosts: true
  respect-rules: true
  listen: 0.0.0.0:1053
  ipv6: true
  nameserver:  #全局
    - https://120.53.53.53/dns-query
    - https://223.5.5.5/dns-query
  default-nameserver: #默认
    - 223.5.5.5
    - 4.2.2.1
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - '*.lan'
    - '*.local'
    - '*.internal'
    - 'localhost'  # 根据需求添加更多域名
  nameserver-policy: #策略
    '+.arpa': '10.0.0.1'
    '+.cn':
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query

  fallback: #故障转移 备用
    - tls://8.8.8.8
    - tls://1.1.1.1
  proxy-server-nameserver: #代理
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
  direct-nameserver: #直连
    - system
  direct-nameserver-follow-policy: false
  fallback-filter: #策略规则
    geoip: true
    geoip-code: CN
    geosite:
      - gfw
      - "!openai"  #落地解锁
      - "!netflix" #dns解锁
      - "!google" #WARP送中
    ipcidr:
      - 240.0.0.0/4
    domain:
      - '+.googleapi.cn'
      - '+.gstatic.com'            
      - '+.google.com'
      - '+.facebook.com'
      - '+.youtube.com'
      - '+.twitter.com'
      - '+.instagram.com'
      
#  cache:              #DNS缓存
#    enable: true
#    size: 128
#    min-ttl: 300     # 最小缓存时间，单位秒
#    max-ttl: 86400   # 最大缓存时间，单位秒

proxies:
- name: "➡️ 直连模式"
  type: direct
  udp: true

- name: "❌ 阻断连接"
  type: reject
  udp: true

#- name: "🌐 全局模式"
#  type: global
#  udp: true

#- name: "🌐 域名解析"
#  type: dns

                                                  
proxy-groups:

#策略 # 

  - {name: ♻️ 代理模式, type: select , proxies: [🚀 手动选择, 🔀 自动选择, ➡️ 直连模式, 🔄 负载均衡, 🌀 链式代理,❌ 阻断连接]}
  - {name: 🚀 手动选择, type: select , include-all-providers: true} 
  - {name: 🔀 自动选择, <<: *ar } 
#  - {name: 🌀 链式代理, type: relay , proxies: [🔄 负载均衡,🚀 手动选择 ] }     #入口自动选择： 🔄 负载均衡  🚀 手动选择  弃用 relay 启用dialer-proxy
  - {name: 🌀 链式代理, type: select, proxies: [🚀 手动选择], dialer-proxy: 🔄 负载均衡}
  - {name: 🔄 负载均衡, <<: *lr }
  
#分流策略

#  - {name: dns, type: select, proxies: [♻️ 代理模式, 🚀 手动选择]}
  - {name: 🆎 广告拦截, type: select, proxies: [❌ 阻断连接, ♻️ 代理模式,  ➡️ 直连模式]}
  - {name: 🟥 中国连接, <<: *dr }
  - {name: Ⓜ️ 远程仓库, <<: *pr }  
  - {name: Ⓜ️ 微软云盘, <<: *dr }
  - {name: Ⓜ️ 微软服务, <<: *pr }     
  - {name: 🎮 游戏平台, <<: *pr }
  - {name: 🤖 人工智能, <<: *pr }  
  - {name: 🔍 谷歌服务, <<: *pr }  
  - {name: 🔍 谷歌商店, <<: *pr }
  - {name: 🎬 油管视频, <<: *pr }  
  - {name: 🎞️ 奈飞影视, <<: *pr }   
  - {name: 🎵 抖音国际, <<: *pr }   
  - {name: 🐼 绅士漫画, <<: *pr }   
  - {name: 🍎 苹果服务, <<: *dr }      
  - {name: 🪜 其它连接, <<: *pr }

#  - {name: ➡️ 直连模式, type: select, proxies: [DIRECT]}
#  - {name: ❌ 断开连接, type: select, proxies: [REJECT]}

#  自动切换节点模式

#  - {name: ✅ 故障转移, type: fallback, include-all-providers: true} 

  - {name: 🔂 一致散列, type: load-balance, include-all-providers: true, strategy: consistent-hashing, filter: "^(?!.*自).*"}    
  - {name: 🔁 循环均衡, type: load-balance, include-all-providers: true, strategy: round-robin, filter: "^(?!.*自).*"}
#地区  （自动选择）
 # - {name: 🆓 公益节点, type: url-test , include-all-providers: true, filter: "(?i)公益|free"}
  - {name: 💯 精品节点, type: url-test , include-all-providers: true, filter: "(?i)优|精|反|品|自|家|免流|iplc|iepl|pro"}
  - {name: 🟥 港澳节点, type: url-test , include-all-providers: true, filter: "(?i)港|hk|hongkong|hong kong|澳门|macao|mo"}
  - {name: 🟥 台湾节点, type: url-test , include-all-providers: true, filter: "(?i)台|tw|taiwan"}
  - {name: 🦁 新家节点, type: url-test , include-all-providers: true, filter: "(?i)(新|sg|singapore)"}
  - {name: 🗾 日本节点, type: url-test , include-all-providers: true, filter: "(?i)日|jp|japan"}
  - {name: 🥒 韩国节点, type: url-test , include-all-providers: true, filter: "(?i)韩|kr|ko|korea|south korea|republic of korea"}
#  - {name: 🗽 美国节点, type: url-test , include-all-providers: true, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🌏 亚洲地区, type: url-test , include-all-providers: true, filter: "(?i)港|hk|hongkong|hong kong|台|tw|taiwan|(新|sg|singapore)|日|jp|japan|韩|kr|korea|south korea|republic of korea|印|in|越|vn|泰|th"}
  - {name: 🗽 美国地区, type: url-test , include-all-providers: true, filter: "(?i)美|us|unitedstates|united states|纽约|洛杉矶|利伯蒂湖|圣何塞|西雅图"}
  - {name: ❓ 全部地区, type: url-test , include-all-providers: true}
#  - {name: ❓ 其它地区, type: url-test , include-all-providers: true, filter: "(?i)荷|nl|nederland|德|de|卢森堡|luxembourg|lu|澳大利亚|au|巴基斯坦|pk|哈萨克斯坦|kaz|加拿大|ca|奥地利|at|比利时|be|捷克|cz|英|gb|法|fr|意|it|罗马尼亚|ro"}

# 分流规则
rules:
# 广告拦截
  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOSITE,CN))),🆎 广告拦截 # quic
  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOIP,CN))),🆎 广告拦截 # quic
#  - AND,((RULE-SET,anti-AD),(NOT,((RULE-SET,anti-AD-white)))),🆎 广告拦截
#  - RULE-SET,Advertising_Classical,🆎 广告拦截
#  - DOMAIN,tms.dingtalk.com,♻️ 代理模式 #叮叮免流
#  - DOMAIN,alidocs.dingtalk.com,♻️ 代理模式 #叮叮免流

  - GEOIP,lan,➡️ 直连模式,no-resolve
  - RULE-SET,CustomProxy_Domain,♻️ 代理模式 #自定义
  - RULE-SET,CustomDirect_Domain,➡️ 直连模式   #自定义
  - RULE-SET,Oracle_Classical,➡️ 直连模式
  - RULE-SET,Gemini_Classical,🤖 人工智能
  - RULE-SET,GooglePlay_Domain,🔍 谷歌商店 #谷歌 大垃圾
  - RULE-SET,Game_Classical,🎮 游戏平台     
  - RULE-SET,Ehentai_Domain,🐼 绅士漫画
#  - RULE-SET,Riot_Classical,🎮 游戏平台 #拳头 小垃圾
  - RULE-SET,GameDownloadCN_Classical,🟥 中国连接,no-resolve  

  - GEOSITE,google,🔍 谷歌服务
  - GEOSITE,google-cn,🔍 谷歌服务
  - GEOSITE,youtube,🎬 油管视频
  - GEOSITE,tiktok,🎵 抖音国际  
  - GEOSITE,CN,🟥 中国连接,no-resolve
  - GEOSITE,steam@cn,🎮 游戏平台
  - GEOSITE,steam,🎮 游戏平台
  - GEOSITE,github,Ⓜ️ 远程仓库    
  - GEOSITE,onedrive,Ⓜ️ 微软云盘
  - GEOSITE,microsoft,Ⓜ️ 微软服务  
  - GEOSITE,ehentai,♻️ 代理模式 
  - GEOSITE,telegram,♻️ 代理模式
  - GEOSITE,openai,🤖 人工智能
  - GEOSITE,anthropic,🤖 人工智能  
  - GEOSITE,netflix,🎞️ 奈飞影视
  - GEOSITE,apple,🍎 苹果服务  

#  - RULE-SET,AntiAd_domain,🟥 中国连接,,no-resolve #白名单
#  - RULE-SET,anti-AD_domain,REJECT #广告
  - GEOSITE,category-ads-all,REJECT  #广告  

  - GEOSITE,geolocation-!cn,🪜 其它连接
  - GEOIP,google,🔍 谷歌服务
  - GEOIP,telegram,♻️ 代理模式 

  - GEOIP,netflix,🎞️ 奈飞影视
  - GEOIP,CN,🟥 中国连接,no-resolve
  - MATCH,🪜 其它连接


#  - RULE-SET,xx_ip,xx
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: text}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: text}
  classical: &classical {type: http, interval: 86400, behavior: classical, format: yaml}
rule-providers:
# 自定义常用域名规则
  CustomProxy_Domain:
    <<: *domain
    url: "https://ghp.ci/https://raw.githubusercontent.com/83288892/clash/main/rule/proxy.list"

  CustomDirect_Domain:
    <<: *domain
    url: "https://ghp.ci/https://raw.githubusercontent.com/83288892/clash/main/rule/direct.list"

  GooglePlay_Domain:
    <<: *domain
    url: "https://ghp.ci/https://raw.githubusercontent.com/83288892/clash/main/rule/googleplay.list"  
  
  Gemini_Classical:
    <<: *classical
    url: "https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Gemini/Gemini.yaml"  
# 拳头
#  Riot_Classical:
#    <<: *classical
#    url: "https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Riot/Riot.yaml"
# 游戏直连下载
  GameDownloadCN_Classical:
    <<: *classical
    url: "https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN.yaml"

# 游戏 
  Game_Classical:
    <<: *classical
    url: "https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Game/Game.yaml"

  Ehentai_Domain:
    <<: *domain
    url: "https://ghp.ci/https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ehentai.list"    
# 甲骨文    
  Oracle_Classical:
    <<: *classical
    url: "https://ghp.ci/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Oracle/Oracle.yaml"
   
# 广告拦截
  # anti-AD 广告拦截规则
  # https://github.com/privacy-protection-tools/anti-AD
  # 如果误杀率高请自行更换
  # RULE-SET,anti-AD_domain,REJECT  #拦截
  # RULE-SET,AntiAd_domain,DIRECT #直连
#  anti-AD_domain:
#    <<: *domain
#    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml"
    
# 白名单
#  AntiAd_domain:
#    <<: *domain
#    url: "https://mirror.ghproxy.com/https://raw.githubusercontent.com/privacy-protection-tools/dead-horse/master/anti-ad-white-for-clash.yaml"  
    
#  cn_ip:
#    <<: *ip
#    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"
